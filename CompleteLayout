import React, { useState } from "react";
import Order from "./Order.jsx";
import Profile from "./Profile.jsx";
import Settings from "./Settings.jsx";
import { TiAdjustBrightness } from "react-icons/ti";
import AcUnitIcon from "@mui/icons-material/AcUnit";
import AccountCircleIcon from "@mui/icons-material/AccountCircle";
import SettingsIcon from "@mui/icons-material/Settings";
import LogoutIcon from "@mui/icons-material/Logout";
import image from './image.png';

const Dashboard = () => {
  const [sidebarOpen, setSidebarOpen] = useState(true);
  const [Page, setPage] = useState("Order");
  const [theme, setTheme] = useState("White");
  const [color, setColor] = useState("Black");
  const [navc, setNavc] = useState("White");
  const [navb, setNavb] = useState("Black");
  const [isLoggedIn,setLoggedin]=useState(false);

  const handleSidebar = () => {
    setSidebarOpen(!sidebarOpen);
  };

  const handleTheme = () => {
    if (theme === "White") {
      setTheme("Black");
      setColor("White");
      setNavb("White");
      setNavc("Black");
    } else {
      setTheme("White");
      setColor("Black");
      setNavc("White");
      setNavb("Black");
    }
  };

  return isLoggedIn ? (
    <>
      <div className="" style={{ background: theme, color: color }}>
        <div className="flex">
          {/* Sidebar */}
          <div className={`fixed left-0 mt-27 h-full ${sidebarOpen ? "w-64" : "w-16"} 
          bg-gray-900 text-white transition-all duration-300 ease-in-out z-50 overflow-y-auto`}>
            <ul className="space-y-2 px-2 py-2">
              <li><a className="flex items-center p-2 rounded hover:bg-gray-700"onClick={() => setPage("Order")}>
                  <AcUnitIcon className="mr-2" />
                  <span className={`${sidebarOpen ? "inline" : "hidden"}`}>Dashboard</span></a></li>
              <li><a className="flex items-center p-2 rounded hover:bg-gray-700" onClick={() => setPage("Profile")}>
                  <AccountCircleIcon className="mr-2" />
                  <span className={`${sidebarOpen ? "inline" : "hidden"}`}>Profile</span></a></li>
              <li><a className="flex items-center p-2 rounded hover:bg-gray-700" onClick={() => setPage("Settings")}>
                  <SettingsIcon className="mr-2" />
                  <span className={`${sidebarOpen ? "inline" : "hidden"}`}>Settings</span></a></li>
              <li><a  className="flex items-center p-2 rounded hover:bg-gray-700" onClick={()=>setLoggedin(false)}><LogoutIcon className="mr-2" />
                  <span className={`${sidebarOpen ? "inline" : "hidden"}`}>Logout</span></a></li>
            </ul>
          </div>
          <div className='flex flex-col flex-1 transition-all duration-300' >
            <nav className="px-10 py-8 flex items-center justify-between transition-all duration-300"
              style={{ background: navb, color: navc }}>
              <button className="hover:bg-gray-700 px-3 py-2 rounded"
                style={{ color: theme, border: "2px solid red" }} onClick={handleSidebar}>â˜°</button>
                <div className="w-53 -m-50 -ml-80"><img src={image} alt="image" className="w-full h-full object-cover"/></div>
              <h1 className="text-lg font-bold">Navbar</h1>
              <div className="block p-2 rounded hover:bg-gray-700 flex" onClick={handleTheme}>
                <TiAdjustBrightness />
              </div>
              <div>img</div>
            </nav>
            {/* Page Content */}
              <div className={`flex-1 p-6 transition-all duration-300 ${sidebarOpen ? "ml-64" : "ml-16"}`}>
              {Page === "Order" && <Order />}
              {Page === "Profile" && <Profile />}
              {Page === "Settings" && <Settings />}
            </div>
            </div>
          </div>
        </div>
      {/* </div> */}
    </>
  ):<div className="m-auto p-5 text-bold">this is not logged in <button className="bg-gray-500 p-2" style={{border:'2px solid black'}} onClick={()=>setLoggedin(true)}>click here for login</button></div>  ;
};

export default Dashboard;





### first install tailwind
